FROM node:22-alpine AS base
WORKDIR /app

ARG NODE_ENV
ENV NODE_ENV=${NODE_ENV}

ARG NODE_PORT
ENV NODE_PORT=${NODE_PORT:-5173}

RUN addgroup -g 1001 -S nodejs && adduser -S reactjs -u 1001 -G nodejs
RUN chown -R reactjs:nodejs /app && chmod -R 755 /app

RUN apk add --no-cache curl libc6-compat git


FROM base AS deps

RUN corepack enable
RUN corepack prepare pnpm@latest --activate

COPY package*.json pnpm-lock.yaml* ./

RUN chown -R reactjs:nodejs /app
USER reactjs

ENV NODE_ENV=development
RUN pnpm install --frozen-lockfile


FROM base AS builder

RUN corepack enable
RUN corepack prepare pnpm@latest --activate

COPY --from=deps --chown=reactjs:nodejs /app/node_modules ./node_modules
COPY --chown=reactjs:nodejs . .

USER reactjs
ENV NODE_ENV=development

RUN pnpm run build


FROM nginx:alpine AS app

# Copy built files to nginx html directory
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration if needed
# COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

# Health check for nginx
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
