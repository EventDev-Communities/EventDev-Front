FROM node:22-alpine AS base
WORKDIR /app

RUN apk add --no-cache libc6-compat && corepack enable && corepack prepare pnpm@10.17.0 --activate


FROM base AS deps

COPY package*.json pnpm-lock.yaml* ./

RUN pnpm install --frozen-lockfile --ignore-scripts


FROM base AS builder

ARG VITE_API_URL
ARG VITE_APP_NAME
ARG VITE_ENABLE_DEVTOOLS
ARG VITE_ENABLE_MOCK_API

ENV VITE_API_URL=$VITE_API_URL
ENV VITE_APP_NAME=$VITE_APP_NAME
ENV VITE_ENABLE_DEVTOOLS=$VITE_ENABLE_DEVTOOLS
ENV VITE_ENABLE_MOCK_API=$VITE_ENABLE_MOCK_API

COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN pnpm run build


FROM nginx:alpine AS runtime

RUN apk add --no-cache curl

COPY .docker/nginx/nginx.conf /etc/nginx/conf.d/default.conf

COPY --from=builder /app/dist /usr/share/nginx/html

RUN mkdir -p /var/run/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run/nginx /var/log/nginx

# Create custom nginx.conf to use custom pid location
RUN echo 'user nginx;' > /etc/nginx/nginx.conf && \
    echo 'worker_processes auto;' >> /etc/nginx/nginx.conf && \
    echo 'pid /var/run/nginx/nginx.pid;' >> /etc/nginx/nginx.conf && \
    echo 'events { worker_connections 1024; }' >> /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/conf.d/*.conf;' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

USER nginx

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
